name: status

on:
  push:

jobs:
  status:
    name: Testy mctest
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: pre
        id: pre
        run: ./pre-run.sh
      - name: printy
        run: echo "My run id is '${GITHUB_RUN_ID}'"
#      - name: Fetch check run ids
#        id: fetch
#        uses: octokit/request-action@v2.x
#        with:
#          route: GET /repos/{repo}/actions/runs/{run_id}/jobs
#          repo: ${{ github.repository }}
#          run_id: ${{ github.run_id }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Echo check run ids
#        run: echo "job ids - ${{ toJSON(fromJSON(steps.fetch.outputs.data).jobs.*.id) }}"
      - name: post
        if: ${{ always() }}
        run: ./post-run.sh test-gcc SUCCESS s3://something/tar.xz ${{ steps.pre.outputs.start }}
        env:
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # - name: Make json
      #   run: |
      #     echo <<EOF > entry.json
      #     {
      #       "compiler": "test-gcc",
      #       "timestamp": "$(date -u -Iseconds)",
      #       "duration": 123,
      #       "status": "SUCCESS",
      #       "path": "s3://something/tar.xz"
      #     }
      #     EOF
      #     cat entry.json
      #     jq -C . entry.json
      # - name: Upload json
      # - name: DynamoDB Actions
      #   uses: mooyoul/dynamodb-actions@v1.2.1
      #   env:
      #     AWS_REGION: us-east-1
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   with:
      #     operation: put
      #     region: us-east-1
      #     table: compiler-builds
      #     file: entry.json
